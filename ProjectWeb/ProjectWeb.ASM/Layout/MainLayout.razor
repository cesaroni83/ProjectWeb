
@inherits LayoutComponentBase
<div class="bb-page">

    <!-- Sidebar -->
    <AuthorizeView>
	    <Authorized> 
            <MenuDinamico @ref="SideMenuDinamic" />
        </Authorized>
	    <NotAuthorized>
            <SidebarMenu @ref="appSidebar" />
        </NotAuthorized>
    </AuthorizeView>
            
    <!-- Contenido principal -->
    <main>
        <!-- Top bar -->
        <div class="bb-top-row px-4 d-flex justify-content-between">
            <Icon Name="IconName.List" role="button" @onclick="ToggleSidebar" />
            <div class="bb-top-row bb-top-row-sticky px-4 d-flex justify-content-end">
                <AuthLinks></AuthLinks>
                <ThemeSwitcher Position="DropdownMenuPosition.End" />
                <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            </div>
        </div>

        <!-- Renderizado de páginas -->
        <article class="content px-4">
            @Body
        </article>
    </main>

</div>
<Toasts class="p-3" AutoHide="true" Delay="2000" Placement="ToastsPlacement.TopRight" StackLength="3" />
<Preload LoadingText="Loading..." />
@code {
    private SidebarMenu appSidebar = default!;
    private MenuDinamico SideMenuDinamic = default!;

    private async Task ToggleSidebar()
    {
        // Intenta cerrar el Sidebar autorizado si existe y está visible
        if (SideMenuDinamic is not null)
        {
            SideMenuDinamic.ToggleSidebar();
            return;
        }

        // Si no, cierra el Sidebar no autorizado
        if (appSidebar is not null)
        {
            appSidebar.ToggleSidebar();
        }
    }

   
}
