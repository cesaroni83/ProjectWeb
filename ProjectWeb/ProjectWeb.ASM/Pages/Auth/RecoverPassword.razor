@page "/RecoverPassword"
@using ProjectWeb.ASM.Repositorio
@using ProjectWeb.Shared.Account
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

@if (loading)
{
    <div class="spinner" />
}
@* <div class="row">
    <div class="col-6">
        <EditForm Model="emailDTO" OnValidSubmit="SendRecoverPasswordEmailTokenAsync">
            <DataAnnotationsValidator />
            <div class="card">
                <div class="card-header">
                    <span>
                        <i class="oi oi-key" /> Enviar email para recuperación de contraseña
                        <button class="btn btn-sm btn-primary float-end mx-2" type="submit"><i class="oi oi-loop-square" /> Enviar</button>
                    </span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>Email:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@emailDTO.Email" />
                            <ValidationMessage For="@(() => emailDTO.Email)" />
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div> *@
<div class="principal">
    <div class="reset-password-container">
        <!-- Panel izquierdo (Formulario) -->
        <div class="form-left-white">
            <h2>Restablecer contraseña</h2>
            <p>Introduce tu correo electrónico para restablecer tu contraseña</p>
            <EditForm class="reset-password-form" Model="emailDTO" OnValidSubmit="SendRecoverPasswordEmailTokenAsync">
                <DataAnnotationsValidator />
                <div class="mb-3 w-100">
                    <label class="form-label">Email</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                        <input type="email" class="form-control" @bind-value="emailDTO.Email" required placeholder="Email" />
                        <ValidationMessage For="@(() => emailDTO.Email)" />
                    </div>
                </div>
                <div class="form-buttons">
                    <button type="submit">Enviar</button>
                    <button type="reset">Cancelar</button>
                </div>
            </EditForm>
        </div>

        <!-- Panel derecho (Información) -->
        <div class="form-right-blue">
            <h2>¡Bienvenido!</h2>
            <p>¿Ya tienes una cuenta?</p>
            <button @onclick="login">Iniciar sesión</button>
        </div>
    </div>

</div>


@code {
    private EmailDTO emailDTO = new();
    private bool loading;

    private async Task SendRecoverPasswordEmailTokenAsync()
    {
        loading = true;
        var responseHttp = await repository.Post("/api/accounts/RecoverPassword", emailDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            loading = false;
            return;
        }

        loading = false;
        await sweetAlertService.FireAsync("Confirmación", "Se te ha enviado un correo electrónico con las instrucciones para recuperar su contraseña.", SweetAlertIcon.Info);
        navigationManager.NavigateTo("/");
    }
    private void login()
    {
        navigationManager.NavigateTo("/Login");
    }
}