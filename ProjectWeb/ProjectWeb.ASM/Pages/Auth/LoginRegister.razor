@using ProjectWeb.ASM.Repositorio
@using ProjectWeb.Shared.Account
@* @page "/LoginRegister"

<div class="login-register-container">
    <div class="form-wrapper" id="formWrapper">
        <!-- LOGIN -->
        <div class="form-panel">
            <div class="form-left">
                <h2>Hello, Welcome!</h2>
                <p>Don't have an Account?</p>
                <button onclick="slideToRegister()">Register</button>
            </div>
            <div class="form-right">
                <h2>Login</h2>
                <form class="login-form">
                    <div class="input-icon">
                        <i class="fas fa-user"></i>
                        <input type="text" placeholder="Username" />
                    </div>
                    <div class="input-icon">
                        <i class="fas fa-lock"></i>
                        <input type="password" placeholder="Password" />
                    </div>
                    <div class="forgot-password">
                        <a href="#">Forgot password?</a>
                    </div>
                    <div class="form-buttons">
                        <button type="submit">Login</button>
                        <button type="reset">Reset</button>
                    </div>
                    <p style="text-align:center; margin-top: 20px;">
                        or Login with Social Platforms
                    </p>
                    <div class="social-icons" style="justify-content: center;">
                        <button><i class="fab fa-google"></i></button>
                        <button><i class="fab fa-facebook-f"></i></button>
                        <button><i class="fab fa-pinterest"></i></button>
                        <button><i class="fab fa-linkedin-in"></i></button>
                    </div>
                </form>
            </div>
        </div>

        <!-- REGISTRO -->
        <div class="form-panel">
            <div class="form-left-white">
                <h2>Registration</h2>

                <!-- Tabs -->
                <div class="tabs">
                    <button class="tab-button active" onclick="openTab(event, 'formTab')">Formulario</button>
                    <button class="tab-button" onclick="openTab(event, 'imageTab')">Subir Imagen</button>
                </div>

                <!-- Contenido Tabs -->
                <div id="formTab" class="tab-content active">
                    <form class="register-form grid-form">
                        <div class="form-group">
                            <i class="fas fa-user"></i>
                            <input type="text" placeholder="Nombre" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-user"></i>
                            <input type="text" placeholder="Apellido" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-envelope"></i>
                            <input type="email" placeholder="Email" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-phone"></i>
                            <input type="tel" placeholder="Teléfono" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-city"></i>
                            <select>
                                <option value="" disabled selected>Seleccione Ciudad</option>
                                <option value="madrid">Madrid</option>
                                <option value="barcelona">Barcelona</option>
                                <option value="valencia">Valencia</option>
                                <option value="sevilla">Sevilla</option>
                                <option value="bilbao">Bilbao</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <i class="fas fa-flag"></i>
                            <select>
                                <option value="" disabled selected>Seleccione País</option>
                                <option value="espana">España</option>
                                <option value="mexico">México</option>
                                <option value="argentina">Argentina</option>
                                <option value="colombia">Colombia</option>
                                <option value="chile">Chile</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <i class="fas fa-user-circle"></i>
                            <input type="text" placeholder="Usuario" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-lock"></i>
                            <input type="password" placeholder="Contraseña" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-lock"></i>
                            <input type="password" placeholder="Confirmar Contraseña" />
                        </div>
                        <div class="form-group">
                            <i class="fas fa-calendar"></i>
                            <input type="date" />
                        </div>

                        <div class="form-buttons full-width">
                            <button type="submit">Register</button>
                            <button type="reset">Reset</button>
                        </div>
                    </form>
                    <p style="text-align:center; margin-top: 10px;">
                        or Register with Social Platforms
                    </p>
                    <div class="social-icons">
                        <button><i class="fab fa-google"></i></button>
                        <button><i class="fab fa-facebook-f"></i></button>
                        <button><i class="fab fa-pinterest"></i></button>
                        <button><i class="fab fa-linkedin-in"></i></button>
                    </div>
                </div>

                <div id="imageTab" class="tab-content">
                    <form class="upload-form" style="text-align:center;">
                        <label for="profileImage" style="font-weight:bold; margin-bottom: 10px; display:block;">Selecciona una imagen para tu perfil:</label>
                        <input type="file" id="profileImage" name="profileImage" accept="image/*" />
                        <div style="margin-top: 20px;">
                            <button type="submit">Subir Imagen</button>
                        </div>
                    </form>
                </div>

            </div>
            <div class="form-right-blue">
                <h2>Welcome Back!</h2>
                <p>Already have an Account?</p>
                <button onclick="slideToLogin()">Login</button>
            </div>
        </div>
    </div>
</div>

<script>
    function slideToRegister() {
      document.getElementById("formWrapper").style.transform = "translateX(-50%)";
    }
    function slideToLogin() {
      document.getElementById("formWrapper").style.transform = "translateX(0)";
    }

    // Función para cambiar tabs en el registro
    function openTab(evt, tabName) {
      // Ocultar todos los contenidos de tabs
      const tabContents = document.querySelectorAll('.tab-content');
      tabContents.forEach(tc => tc.classList.remove('active'));

      // Quitar clase active a todos los botones de tabs
      const tabButtons = document.querySelectorAll('.tab-button');
      tabButtons.forEach(tb => tb.classList.remove('active'));

      // Mostrar tab actual y marcar botón como activo
      document.getElementById(tabName).classList.add('active');
      evt.currentTarget.classList.add('active');
    }
</script>
 *@
@page "/Login"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService

<div class="row">
    <div class="col-md-4  offset-md-4">

        <EditForm Model="loginDTO" OnValidSubmit="LoginAsync">
            <DataAnnotationsValidator />

            <div class="card bg-light">
                <div class="card-header justify-content-center">
                    <span>
                        <i class="oi oi-account-login" /> Iniciar Sesión
                        <button class="btn btn-sm btn-primary float-end" type="submit"><i class="oi oi-check" /> Iniciar Sesión</button>
                    </span>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>Email:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@loginDTO.Email" />
                            <ValidationMessage For="@(() => loginDTO.Email)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Contraseña:</label>
                        <div>
                            <InputText type="password" class="form-control" @bind-Value="@loginDTO.Password" />
                            <ValidationMessage For="@(() => loginDTO.Password)" />
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a class="bbtn btn-link" href="/ResendToken">Reenviar correro de activación de cuenta</a>
                    <p><a class="bbtn btn-link" href="/RecoverPassword">¿Has olvidado tu contraseña?</a></p>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginDTO loginDTO = new();

    private async Task LoginAsync()
    {
        var responseHttp = await repository.Post<LoginDTO, TokenDTO>("/api/Accounts/Login", loginDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
}