@page "/Login"
@using ProjectWeb.ASM.Repositorio
@using ProjectWeb.ASM.Repositorio.Implementacion
@using ProjectWeb.Shared.Account
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService

<div class="principal">
    <div class="login-register-container">
        <div class="form-wrapper" id="formWrapper">
            <!-- LOGIN -->
            <div class="form-panel">
                <div class="form-left">
                    <h2>¡Hola, bienvenido!</h2>
                    <p>¿No tienes una cuenta?</p>
                    <button class="btn btn-light mt-2" @onclick="Register">Registrarse</button>
                </div>
                <div class="form-right w-100">
                    <h2>Iniciar sesión</h2>
                    <EditForm class="login-form w-100" Model="loginDTO" OnValidSubmit="LoginAsync">

                        <div class="mb-3 w-100">
                            <label class="form-label">Usuario</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input type="email" class="form-control" @bind-value="loginDTO.Email" placeholder="Email" />
                            </div>
                        </div>
                        <div class="mb-3 w-100">
                            <label class="form-label">Contraseña</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input type="password" class="form-control" @bind-value="loginDTO.Password" placeholder="Contraseña" />
                            </div>
                        </div>
                        <div class="mb-3 text-start w-100">
                            <Switch @ref="switch1" @bind-Value="agree" Label="Remember me" />
                        </div>
                        <div class="mb-3 text-start w-100">
                            <a href="/RecoverPassword">¿Olvidaste tu contraseña?</a>
                        </div>
                        <div class="d-flex justify-content-center gap-2">
                            <button type="submit" class="btn btn-primary">Login</button>
                            <button type="reset" class="btn btn-secondary">Reset</button>
                        </div>
                        <p class="text-center mt-4">O inicia sesión con</p>
                        <div class="social-icons">
                            <button><i class="fab fa-google"></i></button>
                            <button><i class="fab fa-facebook-f"></i></button>
                            <button><i class="fab fa-pinterest"></i></button>
                            <button><i class="fab fa-linkedin-in"></i></button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private LoginDTO loginDTO = new();
    private Switch switch1 = default!;
    private bool agree = false;
    private async Task LoginAsync()
    {
        loginDTO.RememberMe = agree;
        var responseHttp = await repository.Post<LoginDTO, TokenDTO>("/api/Accounts/Login", loginDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
    private void Register ()
     {
        navigationManager.NavigateTo("/Register");
     }
}